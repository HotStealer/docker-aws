version: 2

jobs:
  build:
    machine: true
    environment:
      APP_NAME: aws
    steps:
      - checkout
      - run:
          name: Docker version
          command: |
            docker info
            docker --version
      - restore_cache:
          key: docker-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Build image
          command: |
            docker build -t cgswong/${APP_NAME}:latest .
      - run:
          name: Test version
          command: |
            docker run cgswong/${APP_NAME}:latest aws --version
      - save_cache:
          key: docker-cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - "~/docker-cache"
  deploy-step:
    machine: true
    environment:
      APP_NAME: aws
    steps:
      - checkout
      - deploy:
          command: |
            docker build -t cgswong/${APP_NAME}:latest .
            export AWSCLI_VERSION=$(docker run cswong/${APP_NAME}:latest aws --version | cut -d"/" -f2 | cut -d" " -f1)
            docker build --cache-from cgswong/${APP_NAME}:latest -t cgswong/${APP_NAME}:${AWSCLI_VERSION} .
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
            if [  "$CIRCLE_BRANCH" = "master" ]; then
              docker push cgswong/${APP_NAME}:latest
              docker push cgswong/${APP_NAME}:${AWSCLI_VERSION}
            else
              echo "Not on master branch, will not deploy to Docker Hub"
            fi

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - deploy-step:
          requires:
            - build
          filters:
            branches:
              only: master
